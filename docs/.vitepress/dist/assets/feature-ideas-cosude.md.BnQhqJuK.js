import{_ as a,c as i,o as l,ae as o}from"./chunks/framework.CBTkueSR.js";const m=JSON.parse('{"title":"feature-ideas","description":"Document from d:\\\\Documents\\\\rust-projects\\\\old\\\\COsuDE\\\\feature-ideas.md","frontmatter":{"title":"feature-ideas","description":"Document from d:\\\\Documents\\\\rust-projects\\\\old\\\\COsuDE\\\\feature-ideas.md","date":"2025-10-05T00:00:00.000Z"},"headers":[],"relativePath":"feature-ideas-cosude.md","filePath":"feature-ideas-cosude.md"}'),s={name:"feature-ideas-cosude.md"};function t(r,e,n,d,u,c){return l(),i("div",null,[...e[0]||(e[0]=[o('<h1 id="feature-ideas-for-cosude-typing-game" tabindex="-1">Feature Ideas for COsuDE Typing Game <a class="header-anchor" href="#feature-ideas-for-cosude-typing-game" aria-label="Permalink to &quot;Feature Ideas for COsuDE Typing Game&quot;">​</a></h1><h2 id="scoring-system" tabindex="-1">Scoring System <a class="header-anchor" href="#scoring-system" aria-label="Permalink to &quot;Scoring System&quot;">​</a></h2><ul><li>Award points per word (e.g., 10 * word length)</li><li>Bonuses for speed (time-based multiplier)</li><li>Combos for consecutive completions</li><li>Display score, high score, and level</li></ul><h2 id="lives-health" tabindex="-1">Lives/Health <a class="header-anchor" href="#lives-health" aria-label="Permalink to &quot;Lives/Health&quot;">​</a></h2><ul><li>Add 3 lives</li><li>Lose one if a word reaches the bottom untyped</li><li>Game over when lives = 0, with restart option</li></ul><h2 id="levels-difficulty" tabindex="-1">Levels/Difficulty <a class="header-anchor" href="#levels-difficulty" aria-label="Permalink to &quot;Levels/Difficulty&quot;">​</a></h2><ul><li>Increase fall speed or word length every 10 words</li><li>Add stages with themes (e.g., Rust keywords, animals)</li></ul><h2 id="power-ups" tabindex="-1">Power-Ups <a class="header-anchor" href="#power-ups" aria-label="Permalink to &quot;Power-Ups&quot;">​</a></h2><ul><li>Randomly spawn bonuses like &quot;Slow Time&quot; (halve speed for 5s), &quot;Clear&quot; (remove bottom word), or &quot;Multiplier&quot; (double points for 10s)</li></ul><h2 id="sound-effects" tabindex="-1">Sound Effects <a class="header-anchor" href="#sound-effects" aria-label="Permalink to &quot;Sound Effects&quot;">​</a></h2><ul><li>Typing key presses</li><li>Word completion chimes</li><li>Failure buzzes</li><li>Background music with increasing tempo</li></ul><h2 id="visual-enhancements" tabindex="-1">Visual Enhancements <a class="header-anchor" href="#visual-enhancements" aria-label="Permalink to &quot;Visual Enhancements&quot;">​</a></h2><ul><li>Particle effects on completion (e.g., sparkles)</li><li>Word animations (slight wiggle)</li><li>Progress bar or timer</li></ul><h2 id="word-variety" tabindex="-1">Word Variety <a class="header-anchor" href="#word-variety" aria-label="Permalink to &quot;Word Variety&quot;">​</a></h2><ul><li>Multiple lists (programming, food, cities) selectable at start</li><li>Randomize order or add special &quot;boss&quot; words</li></ul><h2 id="ui-improvements" tabindex="-1">UI Improvements <a class="header-anchor" href="#ui-improvements" aria-label="Permalink to &quot;UI Improvements&quot;">​</a></h2><ul><li>Show next word preview</li><li>Typing accuracy percentage</li><li>Streak counter</li></ul><h2 id="game-modes" tabindex="-1">Game Modes <a class="header-anchor" href="#game-modes" aria-label="Permalink to &quot;Game Modes&quot;">​</a></h2><ul><li>Time attack (type as many as possible in 60s)</li><li>Endless (survive as long as possible)</li><li>Challenge (only hard words)</li></ul>',19)])])}const f=a(s,[["render",t]]);export{m as __pageData,f as default};
