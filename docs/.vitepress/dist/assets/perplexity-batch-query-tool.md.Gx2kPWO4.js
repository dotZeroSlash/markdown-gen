import{_ as i,c as s,o as a,ae as t}from"./chunks/framework.CBTkueSR.js";const u=JSON.parse('{"title":"README","description":"Document from d:\\\\Documents\\\\python-projects\\\\perplexity-output\\\\README.md","frontmatter":{"title":"README","description":"Document from d:\\\\Documents\\\\python-projects\\\\perplexity-output\\\\README.md","date":"2025-10-05T00:00:00.000Z"},"headers":[],"relativePath":"perplexity-batch-query-tool.md","filePath":"perplexity-batch-query-tool.md"}'),l={name:"perplexity-batch-query-tool.md"};function o(n,e,r,p,d,h){return a(),s("div",null,[...e[0]||(e[0]=[t(`<h1 id="perplexity-batch-query-tool" tabindex="-1">Perplexity Batch Query Tool <a class="header-anchor" href="#perplexity-batch-query-tool" aria-label="Permalink to &quot;Perplexity Batch Query Tool&quot;">​</a></h1><p>Automates batch queries to Perplexity.ai using Playwright and Brave browser.</p><h2 id="features" tabindex="-1">Features <a class="header-anchor" href="#features" aria-label="Permalink to &quot;Features&quot;">​</a></h2><ul><li>Batch process multiple queries from a text file</li><li>Save results to JSONL and MongoDB</li><li>Model selection support</li><li>Incremental output files</li><li>Tab-per-query isolation</li></ul><h2 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-label="Permalink to &quot;Configuration&quot;">​</a></h2><p>Set environment variables to customize behavior:</p><h3 id="browser-settings" tabindex="-1">Browser Settings <a class="header-anchor" href="#browser-settings" aria-label="Permalink to &quot;Browser Settings&quot;">​</a></h3><ul><li><strong><code>AUTOMATION_PROFILE</code></strong>: Name of separate profile for automation (default: <code>AutomationProfile</code>)</li><li><code>BRAVE_EXE</code>: Path to Brave executable (default: <code>C:\\Program Files\\BraveSoftware\\Brave-Browser\\Application\\brave.exe</code>)</li><li><code>BRAVE_USER_DATA</code>: Path to Brave user data directory</li><li><code>BRAVE_PROFILE</code>: Profile directory name to use instead of automation profile (e.g., <code>Default</code>)</li><li><code>BRAVE_PROFILE_PATH</code>: Full path to specific profile directory</li><li><code>HEADLESS</code>: Run in headless mode - not recommended (<code>0</code> or <code>1</code>, default: <code>0</code>)</li></ul><h3 id="query-settings" tabindex="-1">Query Settings <a class="header-anchor" href="#query-settings" aria-label="Permalink to &quot;Query Settings&quot;">​</a></h3><ul><li><code>INPUT_FILE</code>: Input file with queries (default: <code>queries.txt</code>)</li><li><code>OUTPUT_FILE</code>: Output JSONL file (default: <code>results.jsonl</code>)</li><li><code>DELAY_SEC</code>: Delay between queries in seconds (default: <code>2.0</code>)</li><li><code>TIMEOUT_MS</code>: Timeout for page operations in milliseconds (default: <code>120000</code>)</li><li><strong><code>MODEL</code></strong>: Specify which model to use (e.g., <code>&quot;GPT-4&quot;</code>, <code>&quot;Claude&quot;</code>, <code>&quot;Pro&quot;</code>)</li></ul><h3 id="mongodb-settings" tabindex="-1">MongoDB Settings <a class="header-anchor" href="#mongodb-settings" aria-label="Permalink to &quot;MongoDB Settings&quot;">​</a></h3><ul><li><code>MONGO_URI</code>: MongoDB connection URI (default: <code>mongodb://localhost:27017/</code>)</li><li><code>MONGO_DB</code>: Database name (default: <code>perplexity_</code>)</li><li><code>MONGO_COLLECTION</code>: Collection name (default: <code>queries</code>)</li></ul><h2 id="model-selection" tabindex="-1">Model Selection <a class="header-anchor" href="#model-selection" aria-label="Permalink to &quot;Model Selection&quot;">​</a></h2><p>You can specify which Perplexity model to use for queries:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Windows PowerShell</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$env:MODEL</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;GPT-4&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run_perplexity_batch.py</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Windows CMD</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> MODEL=Claude</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run_perplexity_batch.py</span></span></code></pre></div><p>Common model names:</p><ul><li><code>&quot;GPT-4&quot;</code> or <code>&quot;gpt-4&quot;</code></li><li><code>&quot;Claude&quot;</code> or <code>&quot;claude-3.5-sonnet&quot;</code></li><li><code>&quot;Pro&quot;</code> or <code>&quot;sonar-pro&quot;</code></li></ul><p>The script will attempt to select the specified model in the Perplexity UI. If model selection fails, it will fall back to the default model and continue processing.</p><h2 id="input-file-format" tabindex="-1">Input File Format <a class="header-anchor" href="#input-file-format" aria-label="Permalink to &quot;Input File Format&quot;">​</a></h2><p>The <code>queries.txt</code> file supports two formats:</p><ol><li><strong>Simple format</strong> (one query per line):</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>What is the capital of France?</span></span>
<span class="line"><span>Explain quantum computing</span></span></code></pre></div><ol start="2"><li><strong>CSV format</strong> (id,query):</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>q1,What is the capital of France?</span></span>
<span class="line"><span>q2,Explain quantum computing</span></span></code></pre></div><h2 id="output" tabindex="-1">Output <a class="header-anchor" href="#output" aria-label="Permalink to &quot;Output&quot;">​</a></h2><p>Results are saved to:</p><ol><li><strong>JSONL file</strong>: Incremental files like <code>results_001.jsonl</code>, <code>results_002.jsonl</code>, etc.</li><li><strong>MongoDB</strong>: If configured and available</li></ol><p>Each result includes:</p><ul><li><code>id</code>: Query identifier</li><li><code>timestamp</code>: ISO timestamp</li><li><code>query</code>: The original query</li><li><code>answer</code>: Perplexity&#39;s response</li><li><code>url</code>: URL of the result page</li><li><code>model</code>: The model used (if specified)</li></ul><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><h3 id="quick-start" tabindex="-1">Quick Start <a class="header-anchor" href="#quick-start" aria-label="Permalink to &quot;Quick Start&quot;">​</a></h3><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Simple - just run it!</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.\\run.ps1</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Or run directly</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">python run_perplexity_batch.py</span></span></code></pre></div><p><strong>How it works:</strong></p><ul><li>✅ Uses a separate profile called <code>AutomationProfile</code> (not your Default profile)</li><li>✅ Your main Brave browser can stay open</li><li>✅ Browser window opens minimized in the background</li><li>✅ First run will create the profile and require Perplexity login</li><li>✅ Subsequent runs reuse the logged-in session</li></ul><h3 id="first-time-setup" tabindex="-1">First-Time Setup <a class="header-anchor" href="#first-time-setup" aria-label="Permalink to &quot;First-Time Setup&quot;">​</a></h3><p><strong>Option 1: Manual login (Recommended)</strong></p><ol><li>Run the script once: <code>.\\run.ps1</code></li><li>Log into Perplexity in the browser window that opens</li><li>Close the automation browser</li><li>Future runs will use the saved session</li></ol><p><strong>Option 2: Clone your existing profile</strong></p><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Close all Brave windows first!</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.\\clone_profile.ps1</span></span></code></pre></div><p>This copies your Default profile (with all logins) to AutomationProfile.</p><h3 id="customization" tabindex="-1">Customization <a class="header-anchor" href="#customization" aria-label="Permalink to &quot;Customization&quot;">​</a></h3><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># With custom model</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">env:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MODEL</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Grok 4&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.\\run.ps1</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># With custom input/output files</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">env:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">INPUT_FILE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;my_queries.txt&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">env:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">OUTPUT_FILE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;my_results.jsonl&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.\\run.ps1</span></span></code></pre></div><h3 id="alternative-use-your-main-profile" tabindex="-1">Alternative: Use Your Main Profile <a class="header-anchor" href="#alternative-use-your-main-profile" aria-label="Permalink to &quot;Alternative: Use Your Main Profile&quot;">​</a></h3><p>If you want to use your main profile&#39;s cookies/session:</p><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">env:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">BRAVE_PROFILE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Default&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">python run_perplexity_batch.py</span></span></code></pre></div><p>⚠️ <strong>Note:</strong> This requires closing all Brave windows first.</p><h2 id="requirements" tabindex="-1">Requirements <a class="header-anchor" href="#requirements" aria-label="Permalink to &quot;Requirements&quot;">​</a></h2><p>Install dependencies:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> requirements.txt</span></span></code></pre></div><h2 id="important-notes" tabindex="-1">Important Notes <a class="header-anchor" href="#important-notes" aria-label="Permalink to &quot;Important Notes&quot;">​</a></h2><ul><li><strong>Default mode:</strong> Uses separate automation profile - your main browser can stay open!</li><li><strong>Using your main profile:</strong> Requires closing all Brave windows and disabling &quot;Continue running background apps&quot;</li><li>Ensure you&#39;re logged into Perplexity.ai in the profile being used</li><li>Model selection requires appropriate Perplexity subscription for premium models</li><li>First run with automation profile will require logging into Perplexity</li></ul>`,51)])])}const k=i(l,[["render",o]]);export{u as __pageData,k as default};
