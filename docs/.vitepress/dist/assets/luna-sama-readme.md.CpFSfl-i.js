import{_ as s,c as n,o as e,ae as i}from"./chunks/framework.CBTkueSR.js";const u=JSON.parse('{"title":"README","description":"Document from d:\\\\Documents\\\\rust-projects\\\\old\\\\luna-sama\\\\README.md","frontmatter":{"title":"README","description":"Document from d:\\\\Documents\\\\rust-projects\\\\old\\\\luna-sama\\\\README.md","date":"2025-10-05T00:00:00.000Z"},"headers":[],"relativePath":"luna-sama-readme.md","filePath":"luna-sama-readme.md"}'),l={name:"luna-sama-readme.md"};function t(o,a,r,p,h,c){return e(),n("div",null,[...a[0]||(a[0]=[i(`<h1 id="luna-sama-a-local-ai-vtuber" tabindex="-1">Luna Sama: A Local AI VTuber <a class="header-anchor" href="#luna-sama-a-local-ai-vtuber" aria-label="Permalink to &quot;Luna Sama: A Local AI VTuber&quot;">​</a></h1><p>Luna Sama is a local implementation of an AI VTuber, inspired by Neurosama. It uses Rust and Ollama for local LLM integration, providing a customizable AI-powered virtual character.</p><h2 id="features" tabindex="-1">Features <a class="header-anchor" href="#features" aria-label="Permalink to &quot;Features&quot;">​</a></h2><ul><li><strong>Local LLM Integration</strong>: Uses Ollama to run language models locally</li><li><strong>Avatar Visualization</strong>: Support for Live2D models (placeholder implementation)</li><li><strong>Text-to-Speech</strong>: Voice generation for the AI character (placeholder implementation)</li><li><strong>Game Integration</strong>: Optional capability to interact with games (placeholder implementation)</li><li><strong>Conversation Management</strong>: Maintains context for natural conversations</li></ul><h2 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;Prerequisites&quot;">​</a></h2><ul><li><a href="https://www.rust-lang.org/tools/install" target="_blank" rel="noreferrer">Rust</a> (2021 edition or later)</li><li><a href="https://github.com/ollama/ollama" target="_blank" rel="noreferrer">Ollama</a> for running language models locally</li></ul><h3 id="installing-ollama" tabindex="-1">Installing Ollama <a class="header-anchor" href="#installing-ollama" aria-label="Permalink to &quot;Installing Ollama&quot;">​</a></h3><p>Follow these steps to install Ollama:</p><ol><li>Visit the <a href="https://github.com/ollama/ollama" target="_blank" rel="noreferrer">Ollama GitHub repository</a> or the <a href="https://ollama.ai/" target="_blank" rel="noreferrer">official website</a></li><li>Download and install the appropriate version for your OS</li><li>Once installed, pull a model that will be used by Luna Sama:</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Pull a model (e.g., Llama 2)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ollama</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> llama2</span></span></code></pre></div><p>Make sure Ollama is running before starting Luna Sama:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Start the Ollama service</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ollama</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> serve</span></span></code></pre></div><h2 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">​</a></h2><ol><li><p>Clone the repository:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/yourusername/luna-sama.git</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> luna-sama</span></span></code></pre></div></li><li><p>Build the project:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cargo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span></code></pre></div></li></ol><h2 id="development-environment" tabindex="-1">Development Environment <a class="header-anchor" href="#development-environment" aria-label="Permalink to &quot;Development Environment&quot;">​</a></h2><p>For NixOS users, a <code>shell.nix</code> file is provided for setting up the development environment:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nix-shell</span></span></code></pre></div><p>This will install all necessary dependencies for building the project.</p><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><ol><li><p>Generate a default configuration:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cargo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --generate-config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config.json</span></span></code></pre></div></li><li><p>Edit the configuration file as needed.</p></li><li><p>Run the application:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cargo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config.json</span></span></code></pre></div></li></ol><h2 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-label="Permalink to &quot;Configuration&quot;">​</a></h2><p>The configuration file contains settings for:</p><ul><li><strong>LLM</strong>: Model name, host, port, system prompt, and history size</li><li><strong>Avatar</strong>: Model path, window dimensions</li><li><strong>Voice</strong>: Voice model, pitch, and speed</li><li><strong>Game</strong>: Optional game integration settings</li></ul><h2 id="project-structure" tabindex="-1">Project Structure <a class="header-anchor" href="#project-structure" aria-label="Permalink to &quot;Project Structure&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>luna-sama/</span></span>
<span class="line"><span>├── src/</span></span>
<span class="line"><span>│   ├── main.rs           # Application entry point</span></span>
<span class="line"><span>│   ├── lib.rs            # Core library code</span></span>
<span class="line"><span>│   ├── llm/              # LLM integration module</span></span>
<span class="line"><span>│   │   ├── mod.rs        # Module definition</span></span>
<span class="line"><span>│   │   ├── ollama.rs     # Ollama client integration</span></span>
<span class="line"><span>│   │   └── context.rs    # Conversation context management</span></span>
<span class="line"><span>│   ├── avatar/           # Avatar visualization</span></span>
<span class="line"><span>│   │   ├── mod.rs</span></span>
<span class="line"><span>│   │   ├── model.rs      # Model loading/rendering</span></span>
<span class="line"><span>│   │   └── animation.rs  # Animation controller</span></span>
<span class="line"><span>│   ├── tts/              # Text-to-speech</span></span>
<span class="line"><span>│   │   ├── mod.rs</span></span>
<span class="line"><span>│   │   └── voice.rs      # Voice generation</span></span>
<span class="line"><span>│   ├── game/             # Game integration (optional)</span></span>
<span class="line"><span>│   │   ├── mod.rs</span></span>
<span class="line"><span>│   │   └── controller.rs # Game control logic</span></span>
<span class="line"><span>│   └── utils/            # Shared utilities</span></span>
<span class="line"><span>│       ├── mod.rs</span></span>
<span class="line"><span>│       └── config.rs     # Configuration management</span></span>
<span class="line"><span>└── assets/               # Project assets (not included)</span></span>
<span class="line"><span>    ├── models/           # Avatar models</span></span>
<span class="line"><span>    └── voices/           # Voice samples/files</span></span></code></pre></div><h2 id="current-status" tabindex="-1">Current Status <a class="header-anchor" href="#current-status" aria-label="Permalink to &quot;Current Status&quot;">​</a></h2><p>This project is in early development. Many components are currently placeholder implementations that will be expanded in future versions.</p><h2 id="license" tabindex="-1">License <a class="header-anchor" href="#license" aria-label="Permalink to &quot;License&quot;">​</a></h2><p>MIT License</p>`,29)])])}const g=s(l,[["render",t]]);export{u as __pageData,g as default};
