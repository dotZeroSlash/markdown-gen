import{_ as s,c as e,o as i,ae as n}from"./chunks/framework.CBTkueSR.js";const u=JSON.parse('{"title":"finance-implementation","description":"Document from d:\\\\Documents\\\\rust-projects\\\\yumlabs\\\\docs\\\\finance-implementation.md","frontmatter":{"title":"finance-implementation","description":"Document from d:\\\\Documents\\\\rust-projects\\\\yumlabs\\\\docs\\\\finance-implementation.md","date":"2025-10-05T00:00:00.000Z"},"headers":[],"relativePath":"finance-implementation-yumlabs.md","filePath":"finance-implementation-yumlabs.md"}'),t={name:"finance-implementation-yumlabs.md"};function l(o,a,r,c,d,h){return i(),e("div",null,[...a[0]||(a[0]=[n(`<h1 id="finance-view-implementation" tabindex="-1">Finance View Implementation <a class="header-anchor" href="#finance-view-implementation" aria-label="Permalink to &quot;Finance View Implementation&quot;">​</a></h1><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><p>Implemented a comprehensive finance view that fetches stock recommendations from Perplexity AI, queries real-time stock data from Finnhub API, and displays it in a beautiful UI with intelligent caching.</p><h2 id="features-implemented" tabindex="-1">Features Implemented <a class="header-anchor" href="#features-implemented" aria-label="Permalink to &quot;Features Implemented&quot;">​</a></h2><h3 id="_1-smart-data-caching" tabindex="-1">1. <strong>Smart Data Caching</strong> <a class="header-anchor" href="#_1-smart-data-caching" aria-label="Permalink to &quot;1. **Smart Data Caching**&quot;">​</a></h3><ul><li>Checks MongoDB for existing finance data before making API calls</li><li>Only fetches new data if cached data is older than 1 day</li><li>Saves API calls and improves performance</li></ul><h3 id="_2-two-stage-data-fetching" tabindex="-1">2. <strong>Two-Stage Data Fetching</strong> <a class="header-anchor" href="#_2-two-stage-data-fetching" aria-label="Permalink to &quot;2. **Two-Stage Data Fetching**&quot;">​</a></h3><ol><li><p><strong>Stage 1: Get Recommendations</strong> (Perplexity AI)</p><ul><li>Queries Perplexity with market analysis prompt</li><li>Parses response to extract stock symbols</li><li>Extracts analysis text for display</li></ul></li><li><p><strong>Stage 2: Fetch Real-Time Quotes</strong> (Finnhub API)</p><ul><li>Takes symbols from Perplexity response</li><li>Fetches current stock data for each symbol</li><li>Displays: current price, change, % change, high, low, open, previous close</li></ul></li></ol><h3 id="_3-beautiful-ui-display" tabindex="-1">3. <strong>Beautiful UI Display</strong> <a class="header-anchor" href="#_3-beautiful-ui-display" aria-label="Permalink to &quot;3. **Beautiful UI Display**&quot;">​</a></h3><ul><li><strong>Header</strong>: Back button and refresh button</li><li><strong>Title Row</strong>: Shows &quot;Stock Market&quot; with last update timestamp</li><li><strong>Analysis Section</strong>: Displays Perplexity&#39;s market analysis in a styled card</li><li><strong>Stock Quote Cards</strong>: Each stock gets its own card with: <ul><li>Symbol and current price</li><li>Change amount and percentage (color-coded: green for positive, red for negative)</li><li>Detailed stats: Open, High, Low, Previous Close</li></ul></li><li><strong>Scrollable</strong>: All content is scrollable for multiple stocks</li><li><strong>Loading States</strong>: Shows loading indicator while fetching data</li><li><strong>Error Handling</strong>: Displays errors clearly</li></ul><h2 id="new-files-created" tabindex="-1">New Files Created <a class="header-anchor" href="#new-files-created" aria-label="Permalink to &quot;New Files Created&quot;">​</a></h2><h3 id="src-finance-rs" tabindex="-1"><code>src/finance.rs</code> <a class="header-anchor" href="#src-finance-rs" aria-label="Permalink to &quot;\`src/finance.rs\`&quot;">​</a></h3><p>Core finance data structures and database operations:</p><ul><li><code>StockRecommendation</code>: Holds symbols and analysis from Perplexity</li><li><code>StockQuote</code>: Real-time stock data from Finnhub</li><li><code>FinanceData</code>: Combined data structure stored in MongoDB</li><li>Database functions: <ul><li><code>save_finance_data()</code>: Save to MongoDB</li><li><code>get_latest_finance_data()</code>: Retrieve most recent data</li><li><code>should_refresh_finance_data()</code>: Check if cache is stale (&gt;1 day old)</li></ul></li><li>Parsing functions: <ul><li><code>parse_symbols_from_response()</code>: Extract stock symbols from Perplexity response</li><li><code>parse_analysis_from_response()</code>: Extract analysis text</li></ul></li></ul><h2 id="modified-files" tabindex="-1">Modified Files <a class="header-anchor" href="#modified-files" aria-label="Permalink to &quot;Modified Files&quot;">​</a></h2><h3 id="src-api-rs" tabindex="-1"><code>src/api.rs</code> <a class="header-anchor" href="#src-api-rs" aria-label="Permalink to &quot;\`src/api.rs\`&quot;">​</a></h3><p>Added Finnhub API integration:</p><ul><li><code>FinnhubQuote</code>: Response structure from Finnhub API</li><li><code>fetch_stock_quote()</code>: Fetch single stock quote</li><li><code>fetch_multiple_quotes()</code>: Fetch quotes for multiple symbols</li></ul><h3 id="src-models-rs" tabindex="-1"><code>src/models.rs</code> <a class="header-anchor" href="#src-models-rs" aria-label="Permalink to &quot;\`src/models.rs\`&quot;">​</a></h3><p>Updated finance state and messages:</p><ul><li><code>FinanceState</code>: Now holds <code>Option&lt;FinanceData&gt;</code> and <code>last_updated</code> timestamp</li><li><code>FinanceMessage</code>: Expanded to handle multi-stage workflow: <ul><li><code>Load</code>: Initial trigger</li><li><code>CheckCache</code>: Check database for cached data</li><li><code>CacheChecked</code>: Result of cache check</li><li><code>FetchRecommendations</code>: Get symbols from Perplexity</li><li><code>RecommendationsReceived</code>: Process Perplexity response</li><li><code>FetchQuotes</code>: Get real-time data from Finnhub</li><li><code>QuotesReceived</code>: Process Finnhub data</li><li><code>DataReady</code>: Final data ready to display</li></ul></li></ul><h3 id="src-update-finance-updater-rs" tabindex="-1"><code>src/update/finance_updater.rs</code> <a class="header-anchor" href="#src-update-finance-updater-rs" aria-label="Permalink to &quot;\`src/update/finance_updater.rs\`&quot;">​</a></h3><p>Complete rewrite with sophisticated state machine:</p><ol><li><strong>Load</strong> → Check cache</li><li><strong>CacheChecked(Some)</strong> → Display cached data</li><li><strong>CacheChecked(None)</strong> → Fetch recommendations from Perplexity</li><li><strong>RecommendationsReceived</strong> → Parse symbols, fetch quotes from Finnhub</li><li><strong>QuotesReceived</strong> → Save to database, display data</li></ol><ul><li>Added <code>format_timestamp()</code> helper for human-readable timestamps</li></ul><h3 id="src-view-finance-view-rs" tabindex="-1"><code>src/view/finance_view.rs</code> <a class="header-anchor" href="#src-view-finance-view-rs" aria-label="Permalink to &quot;\`src/view/finance_view.rs\`&quot;">​</a></h3><p>Complete redesign with beautiful UI:</p><ul><li><code>build_finance_view()</code>: Main view with header, title, and scrollable content</li><li><code>build_finance_data_display()</code>: Renders analysis and stock cards</li><li><code>build_stock_quote_card()</code>: Individual stock card with color-coded changes</li></ul><h3 id="src-mongo-connection-rs" tabindex="-1"><code>src/mongo_connection.rs</code> <a class="header-anchor" href="#src-mongo-connection-rs" aria-label="Permalink to &quot;\`src/mongo_connection.rs\`&quot;">​</a></h3><p>Added finance database connection:</p><ul><li><code>get_finance_collection()</code>: Returns MongoDB collection for finance data</li></ul><h3 id="src-constants-rs" tabindex="-1"><code>src/constants.rs</code> <a class="header-anchor" href="#src-constants-rs" aria-label="Permalink to &quot;\`src/constants.rs\`&quot;">​</a></h3><p>Added new constants:</p><ul><li><code>FINNHUB_API_URL</code>: Finnhub API endpoint</li><li><code>FINANCE_DB_NAME</code>: MongoDB database name</li><li><code>FINANCE_COLLECTION_NAME</code>: MongoDB collection name</li></ul><h3 id="src-main-rs" tabindex="-1"><code>src/main.rs</code> <a class="header-anchor" href="#src-main-rs" aria-label="Permalink to &quot;\`src/main.rs\`&quot;">​</a></h3><p>Added finance module declaration</p><h2 id="data-flow" tabindex="-1">Data Flow <a class="header-anchor" href="#data-flow" aria-label="Permalink to &quot;Data Flow&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>User clicks &quot;Finance&quot; or &quot;Refresh&quot;</span></span>
<span class="line"><span>    ↓</span></span>
<span class="line"><span>Load message triggered</span></span>
<span class="line"><span>    ↓</span></span>
<span class="line"><span>Check MongoDB cache</span></span>
<span class="line"><span>    ↓</span></span>
<span class="line"><span>Is data &lt; 1 day old?</span></span>
<span class="line"><span>    ↓ YES                    ↓ NO</span></span>
<span class="line"><span>Display cached data    Fetch from Perplexity</span></span>
<span class="line"><span>                            ↓</span></span>
<span class="line"><span>                       Parse symbols &amp; analysis</span></span>
<span class="line"><span>                            ↓</span></span>
<span class="line"><span>                       Fetch quotes from Finnhub</span></span>
<span class="line"><span>                            ↓</span></span>
<span class="line"><span>                       Combine data</span></span>
<span class="line"><span>                            ↓</span></span>
<span class="line"><span>                       Save to MongoDB</span></span>
<span class="line"><span>                            ↓</span></span>
<span class="line"><span>                       Display to user</span></span></code></pre></div><h2 id="api-integration" tabindex="-1">API Integration <a class="header-anchor" href="#api-integration" aria-label="Permalink to &quot;API Integration&quot;">​</a></h2><h3 id="perplexity-ai" tabindex="-1">Perplexity AI <a class="header-anchor" href="#perplexity-ai" aria-label="Permalink to &quot;Perplexity AI&quot;">​</a></h3><ul><li><strong>Endpoint</strong>: <code>https://api.perplexity.ai/chat/completions</code></li><li><strong>Model</strong>: <code>sonar-reasoning</code></li><li><strong>Purpose</strong>: Get stock symbol recommendations based on market analysis</li><li><strong>Response Format</strong>:<div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>symbols: [AAPL, MSFT, GOOGL]</span></span>
<span class="line"><span>output: Analysis text explaining the recommendations...</span></span></code></pre></div></li></ul><h3 id="finnhub" tabindex="-1">Finnhub <a class="header-anchor" href="#finnhub" aria-label="Permalink to &quot;Finnhub&quot;">​</a></h3><ul><li><strong>Endpoint</strong>: <code>https://finnhub.io/api/v1/quote</code></li><li><strong>Purpose</strong>: Get real-time stock quotes</li><li><strong>Response Fields</strong>: <ul><li><code>c</code>: Current price</li><li><code>d</code>: Change</li><li><code>dp</code>: Percent change</li><li><code>h</code>: High</li><li><code>l</code>: Low</li><li><code>o</code>: Open</li><li><code>pc</code>: Previous close</li></ul></li></ul><h2 id="database-schema" tabindex="-1">Database Schema <a class="header-anchor" href="#database-schema" aria-label="Permalink to &quot;Database Schema&quot;">​</a></h2><h3 id="collection-finance-data" tabindex="-1">Collection: <code>finance_data</code> <a class="header-anchor" href="#collection-finance-data" aria-label="Permalink to &quot;Collection: \`finance_data\`&quot;">​</a></h3><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;_id&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">ObjectId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;recommendation&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;symbols&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;AAPL&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;MSFT&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;GOOGL&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;analysis&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Market analysis text...&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;quotes&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;symbol&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;AAPL&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;current_price&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">175.50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;change&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2.30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;percent_change&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.33</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;high&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">176.20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;low&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">173.80</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;open&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">174.00</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;previous_close&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">173.20</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;created_at&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">ISODate(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2025-01-15T10:30:00Z&quot;</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="ui-features" tabindex="-1">UI Features <a class="header-anchor" href="#ui-features" aria-label="Permalink to &quot;UI Features&quot;">​</a></h2><h3 id="color-coding" tabindex="-1">Color Coding <a class="header-anchor" href="#color-coding" aria-label="Permalink to &quot;Color Coding&quot;">​</a></h3><ul><li><strong>Green</strong>: Positive stock changes (gains)</li><li><strong>Red</strong>: Negative stock changes (losses)</li><li><strong>Gray</strong>: Labels and secondary information</li></ul><h3 id="responsive-layout" tabindex="-1">Responsive Layout <a class="header-anchor" href="#responsive-layout" aria-label="Permalink to &quot;Responsive Layout&quot;">​</a></h3><ul><li>Fixed width cards for consistency</li><li>Scrollable content area for multiple stocks</li><li>Proper spacing and padding throughout</li></ul><h3 id="user-feedback" tabindex="-1">User Feedback <a class="header-anchor" href="#user-feedback" aria-label="Permalink to &quot;User Feedback&quot;">​</a></h3><ul><li>Loading indicator during API calls</li><li>Error messages displayed clearly</li><li>Timestamp shows data freshness</li><li>Empty state with helpful message</li></ul><h2 id="testing-checklist" tabindex="-1">Testing Checklist <a class="header-anchor" href="#testing-checklist" aria-label="Permalink to &quot;Testing Checklist&quot;">​</a></h2><ol><li>✅ First load (no cache) - Should fetch from Perplexity + Finnhub</li><li>✅ Second load (with cache &lt; 1 day) - Should use cached data</li><li>✅ Refresh button - Should force new fetch</li><li>✅ Error handling - API failures display error messages</li><li>✅ Symbol parsing - Correctly extracts symbols from Perplexity response</li><li>✅ Multiple stocks - Displays all stocks in scrollable view</li><li>✅ Color coding - Green for gains, red for losses</li><li>✅ Timestamp - Shows &quot;Just now&quot;, &quot;X minutes ago&quot;, etc.</li></ol><h2 id="future-enhancements" tabindex="-1">Future Enhancements <a class="header-anchor" href="#future-enhancements" aria-label="Permalink to &quot;Future Enhancements&quot;">​</a></h2><ol><li><strong>Manual Symbol Entry</strong>: Allow users to add custom stock symbols</li><li><strong>Watchlist</strong>: Save favorite symbols for quick access</li><li><strong>Charts</strong>: Add price history charts using a charting library</li><li><strong>Alerts</strong>: Set price alerts for specific stocks</li><li><strong>More Data</strong>: Add volume, market cap, P/E ratio, etc.</li><li><strong>Refresh Interval</strong>: Auto-refresh every X minutes</li><li><strong>Export</strong>: Export data to CSV or JSON</li><li><strong>Comparison</strong>: Compare multiple stocks side-by-side</li></ol>`,57)])])}const k=s(t,[["render",l]]);export{u as __pageData,k as default};
